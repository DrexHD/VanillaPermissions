plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))

    // Mod dependencies
    modImplementation include("me.lucko:fabric-permissions-api:${project.fabric_permissions_version}")

    // Required by luckperms in local test environment
    Set<String> apiModules = [
            "fabric-lifecycle-events-v1",
            "fabric-networking-api-v1"
    ]
    apiModules.forEach {
        modRuntimeOnly(fabricApi.module(it, project.fabric_version))
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

java {
    withSourcesJar()
}

loom {
    accessWidenerPath.set(file("src/main/resources/vanilla-permissions.accesswidener"))
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
    }
}
